{"ast":null,"code":"import React, { useState } from 'react';\nimport './App.css';\nimport ProfilePage from '../my-profile/profile';\nimport Login2 from '../login2/login2';\nimport Registration from '../registration/registration';\nimport Navbar from '../navbar/navbar';\nim;\nimport { Route, Routes } from \"react-router-dom\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  // const [loggedIn, setLoggedIn] = React.useState(false);\n  // const [userName, setUserName] = React.useState('');\n\n  // function handleLogin(name){\n  //       // Set the loggedIn state to true after successful login\n\n  //   setLoggedIn(true);\n  //   setUserName(name);\n\n  // }\n  // function handleLogout(){\n  //   // Set the loggedIn state to false after successful logout\n  //   setLoggedIn(false);\n  //   setUserName('');\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ProfilePage","Login2","Registration","Navbar","im","Route","Routes","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_c","$RefreshReg$"],"sources":["/home/user/Development/code/Ruby/portfolio-front-end/portfolio/src/components/app/App.js"],"sourcesContent":["import React,{useState} from 'react';\nimport './App.css'\nimport ProfilePage from '../my-profile/profile';\nimport Login2 from '../login2/login2'\nimport Registration from '../registration/registration';\nimport Navbar from '../navbar/navbar';\nim\nimport {Route, Routes} from \"react-router-dom\"\n\n\n\n\nfunction App() {\n  // const [loggedIn, setLoggedIn] = React.useState(false);\n  // const [userName, setUserName] = React.useState('');\n\n\n  // function handleLogin(name){\n  //       // Set the loggedIn state to true after successful login\n\n  //   setLoggedIn(true);\n  //   setUserName(name);\n\n  // }\n  // function handleLogout(){\n  //   // Set the loggedIn state to false after successful logout\n  //   setLoggedIn(false);\n  //   setUserName('');\n\n  // }\n\n  return (\n   <>\n    \n    {/* <div className=\"nav-container\">\n    <Navbar  />\n      <Routes>\n        <Route path=\"/\" element={<Login2/>} />\n        <Route path=\"/bio\" element={<ProfilePage/>} />\n        <Route path=\"/register\" element={<Registration />} />\n        <Route path=\"/logout\" element={<Login2 />} />\n      </Routes>\n    \n    </div> */}\n   </>\n \n  );\n\n}\n\nexport default App;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAO,WAAW;AAClB,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,MAAM,MAAM,kBAAkB;AACrCC,EAAE;AACF,SAAQC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAK9C,SAASC,GAAGA,CAAA,EAAG;EACb;EACA;;EAGA;EACA;;EAEA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;;EAEA,oBACCD,OAAA,CAAAF,SAAA,oBAYG;AAIN;AAACI,EAAA,GApCQD,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}